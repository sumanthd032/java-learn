/*
 * Introduction to Java: The Bytecode and Java's Lineage
 *
 * The Bytecode:
 * - Bytecode is the platform-independent intermediate code generated by the Java compiler (javac).
 * - When this file (HelloWorld.java) is compiled with `javac HelloWorld.java`, it produces `HelloWorld.class`, which contains bytecode.
 * - The Java Virtual Machine (JVM) executes this bytecode, making the program portable across any system with a JVM.
 * - Benefit: "Write once, run anywhere" (WORA). This code runs on Windows, Linux, or any JVM-supported platform.
 * - Try it: Compile with `javac HelloWorld.java`, run with `java HelloWorld`, and view bytecode with `javap -c HelloWorld`.
 *
 * Java's Lineage:
 * - Java was created by James Gosling at Sun Microsystems in 1991, released in 1995, initially named "Oak" for embedded systems.
 * - Influenced by C/C++ (syntax), Smalltalk (OOP concepts like classes), and Lisp (garbage collection).
 * - Designed for portability, security, and simplicity, avoiding C++ complexities like pointers.
 * - This simple program reflects Java's lineage: clear syntax from C++ and portability via the JVM.
 *
 * Exercise: Compile this file, run it, and use `javap -c HelloWorld` to identify one bytecode instruction (e.g., `invokevirtual`).
 */

 
public class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello, Java!"); // Simple output demonstrating Java's portability
    }
}